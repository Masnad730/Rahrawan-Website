{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/My Partition/masnad-law-firm/Rahrawan Website/rahrawan-app/components/Modal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Modal, Button } from 'react-bootstrap';\n\nvar ModalComponent = function ModalComponent(_ref) {\n  _s();\n\n  var isOpen = _ref.isOpen,\n      selector = _ref.selector;\n  var ref = useRef();\n\n  var _useState = useState(false),\n      mounted = _useState[0],\n      setMounted = _useState[1];\n\n  useEffect(function () {\n    ref.current = document.querySelector(selector);\n    setMounted(true);\n  }, [selector]);\n  return mounted ? /*#__PURE__*/createPortal(children, ref.current) : null;\n  if (!isOpen) return null;\n  return ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Inside modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this), document.getElementById('modal'));\n};\n\n_s(ModalComponent, \"na+ZokcoT2dT3sPeiiDWS6iuOJk=\");\n\n_c = ModalComponent;\nexport default ModalComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalComponent\");","map":{"version":3,"sources":["/Volumes/My Partition/masnad-law-firm/Rahrawan Website/rahrawan-app/components/Modal.js"],"names":["useRef","useEffect","useState","createPortal","Modal","Button","ModalComponent","isOpen","selector","ref","mounted","setMounted","current","document","querySelector","children","ReactDOM","getElementById"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAA0B;AAAA;;AAAA,MAAvBC,MAAuB,QAAvBA,MAAuB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC/C,MAAMC,GAAG,GAAGT,MAAM,EAAlB;;AAD+C,kBAEjBE,QAAQ,CAAC,KAAD,CAFS;AAAA,MAExCQ,OAFwC;AAAA,MAE/BC,UAF+B;;AAG/CV,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,GAAG,CAACG,OAAJ,GAAcC,QAAQ,CAACC,aAAT,CAAuBN,QAAvB,CAAd;AACAG,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAHQ,EAGN,CAACH,QAAD,CAHM,CAAT;AAKA,SAAOE,OAAO,gBAAGP,YAAY,CAACY,QAAD,EAAWN,GAAG,CAACG,OAAf,CAAf,GAAyC,IAAvD;AACA,MAAI,CAACL,MAAL,EAAa,OAAO,IAAP;AACb,SAAOS,QAAQ,CAACb,YAAT,eACL,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADK,EAILU,QAAQ,CAACI,cAAT,CAAwB,OAAxB,CAJK,CAAP;AAMD,CAhBD;;GAAMX,c;;KAAAA,c;AAiBN,eAAeA,cAAf","sourcesContent":["import { useRef, useEffect, useState } from 'react'\nimport { createPortal } from 'react-dom'\nimport { Modal, Button } from 'react-bootstrap'\n\nconst ModalComponent = ({ isOpen, selector }) => {\n  const ref = useRef()\n  const [mounted, setMounted] = useState(false)\n  useEffect(() => {\n    ref.current = document.querySelector(selector)\n    setMounted(true)\n  }, [selector])\n\n  return mounted ? createPortal(children, ref.current) : null\n  if (!isOpen) return null\n  return ReactDOM.createPortal(\n    <React.Fragment>\n      <div>Inside modal</div>\n    </React.Fragment>,\n    document.getElementById('modal')\n  )\n}\nexport default ModalComponent\n"]},"metadata":{},"sourceType":"module"}